1/16
・タイトル画面からゲーム画面へ遷移
　→済み
・ゲーム画面ではタップするとスタート
　済み
・タッチしたところに自機が移動
　済み

1/21
・弾発射
  →済み
・弾連射
  →済み
・弾が画面外に出ると削除処理
  →済み

1/22
・敵表示
　→済み
・画面サイズに合わせた最適化
　→シーンのサイズを背景のテクスチャと同じにすることで他のテクスチャもそれに合わせて最適化
　　→let scene = TitleScene(size: CGSize(width: 360, height: 640))
  →上記のサイズと画面をフィットさせる
　　→scene.scaleMode = SKSceneScaleMode.aspectFill

1/23
・リファクタリング(protocol指向で組む(基本オブジェクト指向と同じだがstructで書けるところはstructにする。))
　→クラス分け済み
・GitHubに保存(個人開発ではGitHubDesctopを使うことにする。)
　→済み

1/29
・円の当たり判定(オブジェクトが正方形の場合は円の当たり判定を使用する)
　→それぞれの中心座標を求める(Player.ziki!.position.x Player.ziki!.position.y)
　→xyそれぞれの中心値を対象のオブジェクトのxyそれぞれの中心値から引くとxyそれぞれの距離が求められる。
　→そのxyそれぞれを二乗した値が、斜辺つまり対象のオブジェクトとの距離の値になる。(三平方の定理)
　→この求めた値　< 対象の二つのオブジェクトの半径をそれぞれ足した値(sizeプロパティ/2)　なら当たっていると判定。
　→済み

・デバッグ用に当たり判定の枠を表示させる
　→無理

1/30
・爆発アニメーション
　→済み
・サウンド
 →済み

2/5
・クラス設計(サウンド)
　→済み
・弾接触時にSEを鳴らす
　→済み
・エネミーそれぞれの爆発処理　
　→済み

2/6
・弾のインスタンスを複数作成するのではなく、一つのインスタンス(同じ弾)内で複数の弾を生成する。
・BulletControlleerクラスを作る場合のインスタンス生成はBulletViewクラス内で生成する。
・弾の座標は弾のクラスから取得するのではなく、プレイヤーやエネミーそれぞれのクラスから取得する。

2/19
・敵弾発射
　→EnemyViewクラス内で弾のインスタンス生成、ゲッター生成。
　→済み

・エネミー移動
　→済み

・エネミー消滅時発射中の弾は止まらず移動
　→済み

2/20
・弾と弾との当たり判定
　→現在のCollisionクラスはプレイヤー弾とエネミー限定になっているので、
　　同じ処理でエネミー弾とプレイヤーの当たり判定も行えるようにする。(引数で指定するようにする？)
　　Collisionメソッドは一回だけではなく、プレイヤークラス、エネミークラスそれぞれに記述する？(引数を指定するので)
　→enemyBulletPos[0].zikiBullet[0].position.x
　→済み

・弾と弾の当たり判定コード修正
　→済み

・敵の弾と自機の当たり判定
　→済み

・敵の弾と自機の当たり判定コード修正
　→済み

・敵の弾のテクスチャチェンジ
　→済み

・アプリリリース処理


10/16
・クラス設計の修正
→シングルトン設計の見直し、static処理の見直し。
→ディレクトリ構造の見直し。


10/23
　→クラス設計の修正
　→static部分の修正
　→シングルトンの修正

10/29
抽象クラスを作成。
ファイル修正。

11/6
三点弾の処理を追加。

11/7
三点弾の処理を修正(1時間)

11/9
三点弾の処理を修正((1時間))

11/10 11/11
三点弾の処理を修正完了

11/12 
複数的の当たり判定爆発処理修正(自機の弾と敵機が当たった時に自機の弾が消えていないため連続で当たる)
爆発後の画像が残ってしまっているのを修正。
ホーミング弾完了。

11/13
仮装ジョイスティック作成中。

11/17
仮装スティックの実装。
仮装スティックでの操作による自機の移動制限処理を実装。

11/18
自機の移動に加速度を追加。

11/19
自機の回転ボタン実装、回転処理を追加。

11/20
自機を回転した向きに合わせて弾のベクトルを設定する処理作成中。

11/23
自機を回転させたときに弾のベクトルも回転の向きに合わせる処理完成。(一回転した時のベクトルなど微修正必要)

12/3
敵が常にプレイヤーの方向を向くように。
敵の通常弾をプレイヤーのベクトル目掛けて発射する処理。

12/4
画像描画位置の修正。
敵の三点弾のベクトルも常にプレイヤー目掛けて。

12/10
スティックの背景画像を追加

12/13
避けれるホーミング弾の実装

ToDo
弾のベクトルに合わせて弾の向きも回転させる。
リファクタリング。

敵の弾の発射タイミング修正。
敵が弾を撃つ直前、左右にブレる兆候の表現など。
敵の移動も速度加減処理にする。





・自機を回転させたい、敵も回転して弾を撃つ方向を決めるようにしたい。
・自機を回転する時の操作を決める。

・誘導弾など、いろいろ試す。(複数バレットは敵のみにする、強すぎるため)
・誘導弾などを切り替えるための操作を決める。
・とにかく色々と動きのバリエーションを増やしてリアル感を出したい。
・当たり判定処理の見直し。
・敵は倒すまで消えないようにする。








