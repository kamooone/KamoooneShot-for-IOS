1/16
・タイトル画面からゲーム画面へ遷移
　→済み
・ゲーム画面ではタップするとスタート
　済み
・タッチしたところに自機が移動
　済み

1/21
・弾発射
  →済み
・弾連射
  →済み
・弾が画面外に出ると削除処理
  →済み

1/22
・敵表示
　→済み
・画面サイズに合わせた最適化
　→シーンのサイズを背景のテクスチャと同じにすることで他のテクスチャもそれに合わせて最適化
　　→let scene = TitleScene(size: CGSize(width: 360, height: 640))
  →上記のサイズと画面をフィットさせる
　　→scene.scaleMode = SKSceneScaleMode.aspectFill

1/23
・リファクタリング(protocol指向で組む(基本オブジェクト指向と同じだがstructで書けるところはstructにする。))
　→クラス分け済み
・GitHubに保存(個人開発ではGitHubDesctopを使うことにする。)
　→済み

1/29
・円の当たり判定(オブジェクトが正方形の場合は円の当たり判定を使用する)
　→それぞれの中心座標を求める(Player.ziki!.position.x Player.ziki!.position.y)
　→xyそれぞれの中心値を対象のオブジェクトのxyそれぞれの中心値から引くとxyそれぞれの距離が求められる。
　→そのxyそれぞれを二乗した値が、斜辺つまり対象のオブジェクトとの距離の値になる。(三平方の定理)
　→この求めた値　< 対象の二つのオブジェクトの半径をそれぞれ足した値(sizeプロパティ/2)　なら当たっていると判定。
　→済み

・デバッグ用に当たり判定の枠を表示させる
　→無理

1/30
・爆発アニメーション
　→済み
・サウンド
 →済み

ToDo
・リファクタリング
　→エネミーそれぞれの爆発処理　
　→クラス設計(サウンド)

ToDo
・弾三種類実装
・リファクタリング(クラス設計)

